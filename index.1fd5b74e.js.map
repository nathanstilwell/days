{"mappings":"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","sources":["node_modules/@nathanstilwell/time/src/index.ts","script/modules/numerals.js","script/modules/datesSuck.js","script/main.js"],"sourcesContent":[null,"const _ = Math.floor;\nconst l = console.log;\n\nconst M̅ = 1000000;\nconst C̅M̅ = 900000;\nconst D̅ = 500000;\nconst C̅D̅ = 400000;\nconst C̅ = 100000;\nconst X̅C̅ = 90000;\nconst L̅ = 50000;\nconst X̅L̅ = 40000;\nconst X̅ = 10000;\nconst I̅X̅ = 9000;\nconst V̅ = 5000;\nconst I̅V̅ = 4000;\nconst I̅ = 1000;\nconst M = 1000;\nconst CM = 900;\nconst D = 500;\nconst CD = 400;\nconst C = 100;\nconst XC = 90;\nconst L = 50;\nconst XL = 40;\nconst X = 10;\nconst IX = 9;\nconst V = 5;\nconst IV = 4;\nconst I = 1;\n\nconst romanNumerals = [\n  { label: \"M̅\", value: M̅ },\n  { label: \"C̅M̅\", value: C̅M̅ },\n  { label: \"D̅\", value: D̅ },\n  { label: \"C̅D̅\", value: C̅D̅ },\n  { label: \"C̅\", value: C̅ },\n  { label: \"X̅C̅\", value: X̅C̅ },\n  { label: \"L̅\", value: L̅ },\n  { label: \"X̅L̅\", value: X̅L̅ },\n  { label: \"X̅\", value: X̅ },\n  { label: \"I̅X̅\", value: I̅X̅ },\n  { label: \"V̅\", value: V̅ },\n  { label: \"I̅V̅\", value: I̅V̅ },\n  { label: \"M\", value: M },\n  { label: \"CM\", value: CM },\n  { label: \"D\", value: D },\n  { label: \"CD\", value: CD },\n  { label: \"C\", value: C },\n  { label: \"XC\", value: XC },\n  { label: \"L\", value: L },\n  { label: \"XL\", value: XL },\n  { label: \"X\", value: X },\n  { label: \"IX\", value: IX },\n  { label: \"V\", value: V },\n  { label: \"IV\", value: IV },\n  { label: \"I\", value: I },\n];\n\nconst toNumerals = (num, $ = [], numerals = romanNumerals) => {\n  console.log(num, $, numerals);\n  const next = numerals.find((n) => Math.floor(num / n.value));\n\n  if (next) {\n    return toNumerals(num - next.value, [...$, next.label]);\n  }\n\n  return $.join(\"\");\n};\n\nexport default toNumerals;\n","const months = [\n  \"JAN\",\n  \"FEB\",\n  \"MAR\",\n  \"APR\",\n  \"MAY\",\n  \"JUN\",\n  \"JUL\",\n  \"AUG\",\n  \"SEP\",\n  \"OCT\",\n  \"NOV\",\n  \"DEC\",\n];\nconst padDay = d => (d < 10 ? `0${d}` : d);\nconst formatMonth = m => months[m];\nconst formatDate = date => {\n  const day = padDay(date.getDate());\n  const month = formatMonth(date.getMonth());\n  const year = date.getFullYear();\n\n  return `${day} ${month} ${year}`;\n};\n\nexport default formatDate;\n","import TIME from \"@nathanstilwell/time\";\n\nimport toNumerals from \"./modules/numerals.js\";\nimport formatDate from \"./modules/datesSuck.js\";\n\nconst doc = window.document;\nconst moments = Array.from(doc.querySelectorAll(\"[data-type]\"));\n\nmoments.forEach(m => {\n  const { type } = m.dataset;\n\n  switch (type) {\n    case \"time-span\": {\n      const { begin, end } = m.dataset;\n      if (end === \"now\") {\n        m.innerText = toNumerals(TIME.daysBetween(begin, new Date()));\n        break;\n      }\n      m.innerText = toNumerals(TIME.daysBetween(begin, end));\n      break;\n    }\n    case \"date\" : {\n      const { date } = m.dataset;\n      m.innerText = toNumerals(TIME.daysFrom(TIME.d(date)));\n      break;\n    }\n    case \"now\":\n      m.innerText = formatDate(new Date());\n      break;\n  }\n});\n\n/*\n * Display number of days since \"COVID\" in numerals\n * // The count of COVID days began on 15 MAR 2020 when both my office\n * // and my church had shut their doors due to COVID safety. My last day\n * // in the office was 13 MAR 2020. The 15th was the first Sunday we\n * // held a \"remote service\" on Zoom. West End Church reopened the Sanctuary\n * // on 03 OCT 2021 (see below). My first day back in our new office was\n * // 05 APR 2022. It did not feel right to stop the count then, so I deferred\n * // until Easter (17 APR 2022). The final count of the days of COVID is DCCLXIII.\nconst beginCovid = new Date(\"15 MAR 2020\");\nconst daysOfCovid = daysSince(beginCovid);\ndoc.getElementById(\"covid\").innerText = toNumerals(daysOfCovid);\n */\n\n/*\n * Display number of days since returning to the Sanctuary in numerals\n * // West End Church reopened it's Sancturary on 03 Oct 2021. Due\n * // to the rise of COVID cases due to Omicron and Delta, we closed\n * // the Sanctuary again on Christmas 2021 after LXXXIII days.\nconst welcomeBack = new Date(\"03 OCT 2021\");\nconst aNewThing = daysSince(welcomeBack);\ndoc.getElementById(\"resurrection\").innerText = toNumerals(aNewThing);\n*/\n\n/*\n * In memorial. RIP MDG\n *\nconst deathDay = new Date(\"27 APR 2020\");\nconst daysOfMourning = daysSince(deathDay);\nconst getDaysOfMourning = days => days > aYear ? \"Nullius in verba\" : toNumerals(days);\ndoc.getElementById(\"death\").innerText = getDaysOfMourning(daysOfMourning);\n*/\n\n"],"names":["$805fbe95acc858e3$export$971d5caa766a69d7","second","minute","hour","day","week","fortnight","month","year","leapYear","olympiad","decade","jubilee","century","$805fbe95acc858e3$export$f08c781cff158f4f","datestring","isNaN","Date","parse","$805fbe95acc858e3$export$4368d992c4eafac0","$805fbe95acc858e3$export$625550452a3fa3ec","date","getTime","$805fbe95acc858e3$export$5348c053b94136a6","now","historicDate","$805fbe95acc858e3$export$26fc55c0ba9843a1","when","Math","floor","$805fbe95acc858e3$export$2e2bcd8739ae039","Object","assign","timeFromString","dateFromString","abs","from","to","b","a","prev","next","sort","round","console","log","$5183611cdb99fe6c$var$romanNumerals","label","value","$5183611cdb99fe6c$var$toNumerals","num","$","numerals","find","n","join","$5183611cdb99fe6c$export$2e2bcd8739ae039","$77fff2741189133c$var$months","$77fff2741189133c$export$2e2bcd8739ae039","d","m","getDate","getMonth","getFullYear","$ba322bfe4d533f91$var$doc","window","document","Array","querySelectorAll","forEach","type","dataset","begin","end","innerText","daysBetween","daysFrom"],"version":3,"file":"index.1fd5b74e.js.map"}